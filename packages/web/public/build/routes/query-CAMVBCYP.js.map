{
  "version": 3,
  "sources": ["../../../app/routes/query.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/query.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/query.tsx\");\n  import.meta.hot.lastModified = \"1732560430879.1604\";\n}\n// REMIX HMR END\n\nimport { useState } from 'react';\nimport { Layout } from '~/components/Layout';\nimport { useMutation } from '@tanstack/react-query';\nexport const meta = () => {\n  return [{\n    title: \"SQL Query - Data Studio\"\n  }, {\n    name: \"description\",\n    content: \"Execute SQL queries\"\n  }];\n};\nasync function executeQuery(query) {\n  const response = await fetch('http://localhost:3001/api/execute', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to execute query');\n  }\n  return response.json();\n}\nexport default function Query() {\n  _s();\n  const [query, setQuery] = useState('');\n  const {\n    mutate,\n    data,\n    isLoading,\n    error\n  } = useMutation({\n    mutationFn: executeQuery\n  });\n  const handleExecute = () => {\n    if (query.trim()) {\n      mutate(query);\n    }\n  };\n  return <Layout>\n      <div className=\"space-y-6\">\n        <div>\n          <label htmlFor=\"query\" className=\"block text-sm font-medium text-gray-700\">\n            SQL Query\n          </label>\n          <div className=\"mt-1\">\n            <textarea id=\"query\" name=\"query\" rows={4} className=\"shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md\" value={query} onChange={e => setQuery(e.target.value)} placeholder=\"SELECT * FROM your_table\" />\n          </div>\n        </div>\n\n        <div>\n          <button type=\"button\" onClick={handleExecute} disabled={isLoading} className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\">\n            {isLoading ? 'Executing...' : 'Execute Query'}\n          </button>\n        </div>\n\n        {error && <div className=\"rounded-md bg-red-50 p-4\">\n            <div className=\"flex\">\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {error instanceof Error ? error.message : 'Failed to execute query'}\n                </div>\n              </div>\n            </div>\n          </div>}\n\n        {data && <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  {data.fields?.map(field => <th key={field.name} className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      {field.name}\n                    </th>)}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {data.rows?.map((row, rowIndex) => <tr key={rowIndex}>\n                    {Object.values(row).map((value, colIndex) => <td key={colIndex} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {value?.toString() ?? 'null'}\n                      </td>)}\n                  </tr>)}\n              </tbody>\n            </table>\n            \n            <div className=\"mt-4\">\n              <p className=\"text-sm text-gray-500\">\n                {data.rowCount} rows returned\n              </p>\n            </div>\n          </div>}\n      </div>\n    </Layout>;\n}\n_s(Query, \"WEE6oQKHx4OizG3me8TRY76/Dl4=\", false, function () {\n  return [useMutation];\n});\n_c = Query;\nvar _c;\n$RefreshReg$(_c, \"Query\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["_a"]
}
